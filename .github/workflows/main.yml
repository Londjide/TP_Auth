name: Java CI/CD

on:
  push:
    branches: [ main, master, Connexion, Admin ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Create directories
      run: |
        mkdir -p build
        mkdir -p build/main
        
    - name: Compile project
      run: |
        # Compiler le code source
        javac -d build -cp "lib/*:." $(find src -name "*.java")
        
    - name: Run tests
      run: |
        # Exécuter les tests unitaires
        java -cp "build:lib/*:." org.junit.runner.JUnitCore main.LoginTest
      
    - name: Create JAR
      run: |
        # Créer un fichier JAR exécutable
        echo "Main-Class: main.Connexion" > build/MANIFEST.MF
        jar cvfm TP_Authentification.jar build/MANIFEST.MF -C build .
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: TP_Authentification
        path: TP_Authentification.jar

  sonarqube:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
  deploy:
    needs: [build-and-test, sonarqube]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: TP_Authentification
        
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./TP_Authentification.jar
        asset_name: TP_Authentification.jar
        asset_content_type: application/java-archive
